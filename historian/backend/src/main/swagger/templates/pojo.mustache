import org.springframework.data.solr.core.mapping.Indexed;
import org.springframework.data.solr.core.mapping.SolrDocument;
import org.threeten.bp.format.DateTimeFormatter;
import org.threeten.bp.OffsetDateTime;

/**
* {{#description}}{{.}}{{/description}}{{^description}}{{classname}}{{/description}}
*/{{#description}}
    @ApiModel(description = "{{{description}}}"){{/description}}

@SolrDocument(solrCoreName = "historian")
public class {{classname}} {{#parent}}extends {{{parent}}}{{/parent}} {{#serializableModel}}implements Serializable{{/serializableModel}} {
{{#vars}}
    {{#isEnum}}
        {{^isContainer}}
            {{>enumClass}}
        {{/isContainer}}
    {{/isEnum}}
    {{#items.isEnum}}
        {{#items}}
            {{^isContainer}}
                {{>enumClass}}
            {{/isContainer}}
        {{/items}}
    {{/items.isEnum}}
    {{#jackson}}
        @JsonProperty("{{baseName}}")
        @Indexed(name = "{{baseName}}")
    {{/jackson}}
    {{#gson}}
        @SerializedName("{{baseName}}")
    {{/gson}}
    {{#isContainer}}
        private {{{datatypeWithEnum}}} {{name}}{{#required}} = {{{defaultValue}}}{{/required}}{{^required}} = null{{/required}};
    {{/isContainer}}
    {{^isContainer}}
        private {{{datatypeWithEnum}}} {{name}} = {{{defaultValue}}};
    {{/isContainer}}

{{/vars}}
{{#vars}}
    {{^isReadOnly}}
        public {{classname}} {{name}}({{{datatypeWithEnum}}} {{name}}) {
        this.{{name}} = {{name}};
        return this;
        }
        {{#isListContainer}}

            public {{classname}} add{{nameInCamelCase}}Item({{{items.datatypeWithEnum}}} {{name}}Item) {
            {{^required}}
                if (this.{{name}} == null) {
                this.{{name}} = {{{defaultValue}}};
                }
            {{/required}}
            this.{{name}}.add({{name}}Item);
            return this;
            }
        {{/isListContainer}}
        {{#isMapContainer}}

            public {{classname}} put{{nameInCamelCase}}Item(String key, {{{items.datatypeWithEnum}}} {{name}}Item) {
            {{^required}}
                if (this.{{name}} == null) {
                this.{{name}} = {{{defaultValue}}};
                }
            {{/required}}
            this.{{name}}.put(key, {{name}}Item);
            return this;
            }
        {{/isMapContainer}}

    {{/isReadOnly}}
    /**
    {{#description}}
        * {{description}}
    {{/description}}
    {{^description}}
        * Get {{name}}
    {{/description}}
    {{#minimum}}
        * minimum: {{minimum}}
    {{/minimum}}
    {{#maximum}}
        * maximum: {{maximum}}
    {{/maximum}}
    * @return {{name}}
    **/
    {{#vendorExtensions.extraAnnotation}}
        {{{vendorExtensions.extraAnnotation}}}
    {{/vendorExtensions.extraAnnotation}}
    {{#jackson}}
        @JsonProperty("{{baseName}}")
    {{/jackson}}
    @ApiModelProperty({{#example}}example = "{{{example}}}", {{/example}}{{#required}}required = {{required}}, {{/required}}value = "{{{description}}}")
    {{#useBeanValidation}}{{>beanValidation}}{{/useBeanValidation}}  public {{{datatypeWithEnum}}} {{#isBoolean}}is{{/isBoolean}}{{getter}}() {
    return {{name}};
    }
    {{^isReadOnly}}

        public {{classname}} {{setter}}({{{datatypeWithEnum}}} {{name}}) {
        this.{{name}} = {{name}};
        return this;
        }
    {{/isReadOnly}}

{{/vars}}

{{^supportJava6}}
    @Override
    public boolean equals(java.lang.Object o) {
    if (this == o) {
    return true;
    }
    if (o == null || getClass() != o.getClass()) {
    return false;
    }{{#hasVars}}
        {{classname}} {{classVarName}} = ({{classname}}) o;
        return {{#vars}}Objects.equals(this.{{name}}, {{classVarName}}.{{name}}){{#hasMore}} &&
        {{/hasMore}}{{/vars}}{{#parent}} &&
        super.equals(o){{/parent}};{{/hasVars}}{{^hasVars}}
        return true;{{/hasVars}}
    }

    @Override
    public int hashCode() {
    return Objects.hash({{#vars}}{{name}}{{#hasMore}}, {{/hasMore}}{{/vars}}{{#parent}}{{#hasVars}}, {{/hasVars}}super.hashCode(){{/parent}});
    }

{{/supportJava6}}
{{#supportJava6}}
    @Override
    public boolean equals(java.lang.Object o) {
    if (this == o) {
    return true;
    }
    if (o == null || getClass() != o.getClass()) {
    return false;
    }{{#hasVars}}
        {{classname}} {{classVarName}} = ({{classname}}) o;
        return {{#vars}}ObjectUtils.equals(this.{{name}}, {{classVarName}}.{{name}}){{#hasMore}} &&
        {{/hasMore}}{{/vars}}{{#parent}} &&
        super.equals(o){{/parent}};{{/hasVars}}{{^hasVars}}
        return true;{{/hasVars}}
    }

    @Override
    public int hashCode() {
    return ObjectUtils.hashCodeMulti({{#vars}}{{name}}{{#hasMore}}, {{/hasMore}}{{/vars}}{{#parent}}{{#hasVars}}, {{/hasVars}}super.hashCode(){{/parent}});
    }

{{/supportJava6}}

@Override
public String toString() {
StringBuilder sb = new StringBuilder();
sb.append("{\n");
{{#parent}}sb.append("    ").append(toIndentedString(super.toString())).append("\n");{{/parent}}
{{#vars}}sb.append("    {{name}}: ").append(toIndentedString({{name}})).append("\n");
{{/vars}}sb.append("}");
return sb.toString();
}

    /**
    * Convert the given object to string with each line indented by 4 spaces
    * (except the first line).
    */
    private String toIndentedString(java.lang.Object o) {
    if (o == null) {
        return "null";
    }
    if (o instanceof OffsetDateTime) {
        return ((OffsetDateTime) o).format(DateTimeFormatter.ISO_INSTANT);
    }
        return o.toString().replace("\n", "\n    ");
    }
}